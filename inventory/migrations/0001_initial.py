# Generated by Django 5.2.1 on 2025-07-15 06:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.core.validators import RegexValidator


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Asset Type',
                'verbose_name_plural': 'Asset Types',
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('warehouse', 'Warehouse'), ('hr', 'HR'), ('procurement', 'Procurement'), ('quality', 'Quality'), ('finance', 'Finance'), ('production', 'Production'), ('maintenance', 'Maintenance'), ('osh', 'Occupational Safety and Health'), ('it', 'IT')], max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('icon', models.CharField(help_text='FontAwesome icon class (e.g., fa-bell)', max_length=50, verbose_name='Icon Class')),
                ('color', models.CharField(help_text='Bootstrap color class (e.g., primary, danger)', max_length=20, verbose_name='Color')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Notification Category',
                'verbose_name_plural': 'Notification Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OwnerCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Owner Company',
                'verbose_name_plural': 'Owner Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='inventory.department')),
            ],
            options={
                'ordering': ['department', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(help_text='Enter employee ID (e.g., EMP001 or ABC123)', max_length=20, unique=True)),
                ('national_id', models.CharField(help_text='Enter the 14-digit national ID number', max_length=14, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, null=True, default='', help_text="Enter phone number in the format: '+999999999'", max_length=17, validators=[RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('hire_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='inventory.ownercompany')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='inventory.department')),
                ('position', models.ForeignKey(db_column='position_id', on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='inventory.position', to_field='id')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='ITAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Unknown Asset', max_length=100)),
                ('serial_number', models.CharField(max_length=50, unique=True)),
                ('model', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=100)),
                ('purchase_date', models.DateField()),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('assigned', 'Assigned'), ('maintenance', 'Under Maintenance'), ('retired', 'Retired')], default='available', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('mac_address_wifi', models.CharField(blank=True, max_length=17, verbose_name='Wi-Fi MAC Address')),
                ('mac_address_ethernet', models.CharField(blank=True, max_length=17, verbose_name='Ethernet MAC Address')),
                ('ip_address', models.CharField(blank=True, max_length=15, verbose_name='IP Address')),
                ('delivery_letter_code', models.CharField(blank=True, max_length=50)),
                ('receipt_date', models.DateField(blank=True, null=True)),
                ('processor', models.CharField(blank=True, max_length=100, null=True)),
                ('ram_size', models.CharField(blank=True, max_length=50, null=True)),
                ('hdd1_capacity', models.CharField(blank=True, max_length=50, null=True, verbose_name='Primary Storage')),
                ('hdd2_capacity', models.CharField(blank=True, max_length=50, null=True, verbose_name='Secondary Storage')),
                ('operating_system', models.CharField(blank=True, max_length=50, null=True)),
                ('os_version', models.CharField(blank=True, max_length=50, null=True)),
                ('screen_size', models.CharField(blank=True, max_length=20, null=True)),
                ('resolution', models.CharField(blank=True, max_length=50, null=True)),
                ('refresh_rate', models.CharField(blank=True, max_length=20, null=True)),
                ('panel_type', models.CharField(blank=True, max_length=50, null=True)),
                ('vesa_mount', models.BooleanField(default=False)),
                ('built_in_speakers', models.BooleanField(default=False)),
                ('printer_type', models.CharField(blank=True, max_length=50, null=True)),
                ('connection_type', models.CharField(blank=True, max_length=50, null=True)),
                ('printer_department', models.CharField(blank=True, max_length=100, null=True)),
                ('printer_responsible', models.CharField(blank=True, max_length=100, null=True)),
                ('paper_size_support', models.CharField(blank=True, max_length=100, null=True)),
                ('duplex_printing', models.BooleanField(default=False)),
                ('toner_cartridge_model', models.CharField(blank=True, max_length=100, null=True)),
                ('ups_capacity', models.IntegerField(blank=True, help_text='Capacity in VA', null=True)),
                ('ups_battery_count', models.IntegerField(blank=True, help_text='Number of batteries', null=True)),
                ('ups_battery_life', models.IntegerField(blank=True, help_text='Remaining battery life in months', null=True)),
                ('ups_battery_replacement_date', models.DateField(blank=True, null=True)),
                ('ups_manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.assettype')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.employee')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.ownercompany')),
            ],
            options={
                'verbose_name': 'IT Asset',
                'verbose_name_plural': 'IT Assets',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DeviceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('assignment', 'Assignment'), ('maintenance', 'Maintenance'), ('status_change', 'Status Change'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_history', to='inventory.itasset')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device History',
                'verbose_name_plural': 'Device Histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AssetHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('received', 'Received'), ('assigned', 'Assigned'), ('returned', 'Returned'), ('maintenance', 'Maintenance'), ('retired', 'Retired')], max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_history', to='inventory.itasset')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.employee')),
            ],
            options={
                'verbose_name': 'Asset History',
                'verbose_name_plural': 'Asset Histories',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('status', models.CharField(choices=[('unread', 'Unread'), ('read', 'Read'), ('archived', 'Archived')], default='unread', max_length=10, verbose_name='Status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10, verbose_name='Priority')),
                ('object_id', models.PositiveIntegerField()),
                ('action_url', models.URLField(blank=True, null=True, verbose_name='Action URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('archived_at', models.DateTimeField(blank=True, null=True, verbose_name='Archived At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.notificationcategory', verbose_name='Category')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('employee_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='inventory.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [
                    models.Index(fields=['status', 'created_at'], name='inventory_n_status_b440fc_idx'),
                    models.Index(fields=['employee_profile', 'status'], name='inventory_n_employe_37314b_idx'),
                    models.Index(fields=['content_type', 'object_id'], name='inventory_n_content_41af1e_idx'),
                ],
            },
        ),
    ]
